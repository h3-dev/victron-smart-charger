name: Build & Publish Docker image

on:
  push:
    branches: ["main"]          # Build bei Push auf main
    tags:     ["*"]             # … und bei allen Tags (z. B. v1.2.3)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}   # ghcr.io/<owner>/<repo>

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read        # Quellcode auschecken
      packages: write       # Images in GHCR pushen

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # QEMU aktivieren, damit Buildx ARM emulieren kann
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      # Buildx-Builder anlegen
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      # Tags/Labels erzeugen (latest, sha, Tag-Name)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      # Login in GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build & Push für AMD64 + ARM64
      - name: Build and push image (amd64 + arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
